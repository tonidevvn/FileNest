version: "3.8"

x-minio-common: &minio-common
  image: minio/minio:latest
  environment: &minio-common-env
    MINIO_ROOT_USER: admin
    MINIO_ROOT_PASSWORD: minioadmin
    MINIO_BROWSER_REDIRECT_URL: http://localhost:9090
  healthcheck:
    test: ["CMD", "mc", "ready", "local"]
    interval: 30s
    timeout: 20s
    retries: 3

services:
  minio1:
    <<: *minio-common
    hostname: minio1
    container_name: minio1
    ports:
      - "9000:9000"
      - "9090:9090"
    volumes:
      - minio1-data-1:/data1
      - minio1-data-2:/data2
      - minio1-data-3:/data3
      - minio1-data-4:/data4
    command: server --console-address ":9090" http://minio{1...3}/data{1...4} --address ":9000"
    environment:
      <<: *minio-common-env
    networks:
      - minio-network

  minio2:
    <<: *minio-common
    hostname: minio2
    container_name: minio2
    ports:
      - "9001:9000"
      - "9091:9090"
    volumes:
      - minio2-data-1:/data1
      - minio2-data-2:/data2
      - minio2-data-3:/data3
      - minio2-data-4:/data4
    command: server --console-address ":9090" http://minio{1...3}/data{1...4} --address ":9000"
    environment:
      <<: *minio-common-env
    networks:
      - minio-network

  minio3:
    <<: *minio-common
    hostname: minio3
    container_name: minio3
    ports:
      - "9002:9000"
      - "9092:9090"
    volumes:
      - minio3-data-1:/data1
      - minio3-data-2:/data2
      - minio3-data-3:/data3
      - minio3-data-4:/data4
    command: server --console-address ":9090" http://minio{1...3}/data{1...4} --address ":9000"
    environment:
      <<: *minio-common-env
    networks:
      - minio-network

  setup:
    image: minio/mc
    container_name: mc-setup
    depends_on:
      minio1:
        condition: service_healthy
      minio2:
        condition: service_healthy
      minio3:
        condition: service_healthy
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: minioadmin
    entrypoint: >
      /bin/sh -c "
      sleep 10;

      mc alias set minio1 http://minio1:9000 admin minioadmin;
      mc alias set minio2 http://minio2:9000 admin minioadmin;
      mc alias set minio3 http://minio3:9000 admin minioadmin;

      mc mb minio1/bucket;

      # Create test file
      echo 'Test content' > test.txt;
      mc cp test.txt minio1/bucket/;

      # List the bucket contents
      echo 'Listing bucket contents:';
      mc ls minio1/bucket/;
      "
    networks:
      - minio-network

  mc-heal:
    image: minio/mc
    container_name: mc-heal
    depends_on:
      minio1:
        condition: service_healthy
      minio2:
        condition: service_healthy
      minio3:
        condition: service_healthy
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: minioadmin
    entrypoint: >
      /bin/sh -c "
      mc alias set minio1 http://minio1:9000 admin minioadmin;
      mc alias set minio2 http://minio2:9000 admin minioadmin;
      mc alias set minio3 http://minio3:9000 admin minioadmin;

      while true; do
        mc admin heal --all-drives --verbose minio1/bucket;
        mc admin heal --all-drives --verbose minio2/bucket;
        mc admin heal --all-drives --verbose minio3/bucket;
        sleep 10; # 1 minute = 60 seconds
      done
      "
    networks:
      - minio-network

networks:
  minio-network:
    driver: bridge

volumes:
  minio1-data-1:
  minio1-data-2:
  minio1-data-3:
  minio1-data-4:
  minio2-data-1:
  minio2-data-2:
  minio2-data-3:
  minio2-data-4:
  minio3-data-1:
  minio3-data-2:
  minio3-data-3:
  minio3-data-4:
